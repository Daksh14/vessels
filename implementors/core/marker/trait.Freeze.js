(function() {var implementors = {};
implementors["vessels"] = [{text:"impl Freeze for <a class=\"struct\" href=\"vessels/channel/struct.ForkHandle.html\" title=\"struct vessels::channel::ForkHandle\">ForkHandle</a>",synthetic:true,types:["vessels::channel::ForkHandle"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/channel/struct.ChannelError.html\" title=\"struct vessels::channel::ChannelError\">ChannelError</a>",synthetic:true,types:["vessels::channel::ChannelError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/channel/id_channel/struct.Item.html\" title=\"struct vessels::channel::id_channel::Item\">Item</a>",synthetic:true,types:["vessels::channel::id_channel::item::Item"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/channel/id_channel/struct.IdChannel.html\" title=\"struct vessels::channel::id_channel::IdChannel\">IdChannel</a>",synthetic:true,types:["vessels::channel::id_channel::IdChannel"]},{text:"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"vessels/channel/id_channel/struct.Shim.html\" title=\"struct vessels::channel::id_channel::Shim\">Shim</a>&lt;K&gt;",synthetic:true,types:["vessels::channel::id_channel::Shim"]},{text:"impl Freeze for <a class=\"enum\" href=\"vessels/channel/id_channel/enum.SinkStage.html\" title=\"enum vessels::channel::id_channel::SinkStage\">SinkStage</a>",synthetic:true,types:["vessels::channel::id_channel::SinkStage"]},{text:"impl Freeze for <a class=\"enum\" href=\"vessels/channel/id_channel/enum.IdChannelError.html\" title=\"enum vessels::channel::id_channel::IdChannelError\">IdChannelError</a>",synthetic:true,types:["vessels::channel::id_channel::IdChannelError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/format/json/struct.Json.html\" title=\"struct vessels::format::json::Json\">Json</a>",synthetic:true,types:["vessels::format::json::Json"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/format/cbor/struct.Cbor.html\" title=\"struct vessels::format::cbor::Cbor\">Cbor</a>",synthetic:true,types:["vessels::format::cbor::Cbor"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/format/bincode/struct.Bincode.html\" title=\"struct vessels::format::bincode::Bincode\">Bincode</a>",synthetic:true,types:["vessels::format::bincode::Bincode"]},{text:"impl&lt;T, I, S&gt; Freeze for <a class=\"enum\" href=\"vessels/format/enum.EncodeError.html\" title=\"enum vessels::format::EncodeError\">EncodeError</a>&lt;T, I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as <a class=\"trait\" href=\"https://docs.rs/futures-sink/0.3.0/futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt;&gt;::<a class=\"type\" href=\"https://docs.rs/futures-sink/0.3.0/futures_sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_sink::Sink::Error\">Error</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"vessels/format/trait.Format.html\" title=\"trait vessels::format::Format\">Format</a>&gt;::<a class=\"type\" href=\"vessels/format/trait.Format.html#associatedtype.Error\" title=\"type vessels::format::Format::Error\">Error</a>: Freeze,&nbsp;</span>",synthetic:true,types:["vessels::format::EncodeError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/struct.UnimplementedError.html\" title=\"struct vessels::core::UnimplementedError\">UnimplementedError</a>",synthetic:true,types:["vessels::core::UnimplementedError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/struct.Handle.html\" title=\"struct vessels::core::Handle\">Handle</a>",synthetic:true,types:["vessels::core::Handle"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/struct.Core.html\" title=\"struct vessels::core::Core\">Core</a>",synthetic:true,types:["vessels::core::Core"]},{text:"impl Freeze for <a class=\"enum\" href=\"vessels/core/enum.CoreError.html\" title=\"enum vessels::core::CoreError\">CoreError</a>",synthetic:true,types:["vessels::core::CoreError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/data/struct.Checksum.html\" title=\"struct vessels::core::data::Checksum\">Checksum</a>",synthetic:true,types:["vessels::core::data::Checksum"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"vessels/core/data/struct.Resource.html\" title=\"struct vessels::core::data::Resource\">Resource</a>&lt;T&gt;",synthetic:true,types:["vessels::core::data::Resource"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"vessels/core/data/struct.ReifyError.html\" title=\"struct vessels::core::data::ReifyError\">ReifyError</a>&lt;T&gt;",synthetic:true,types:["vessels::core::data::ReifyError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/hal/network/struct.ListenError.html\" title=\"struct vessels::core::hal::network::ListenError\">ListenError</a>",synthetic:true,types:["vessels::core::hal::network::ListenError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/hal/network/struct.ConnectionError.html\" title=\"struct vessels::core::hal::network::ConnectionError\">ConnectionError</a>",synthetic:true,types:["vessels::core::hal::network::ConnectionError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/hal/network/struct.Client.html\" title=\"struct vessels::core::hal::network::Client\">Client</a>",synthetic:true,types:["vessels::core::hal::network::Client"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/hal/network/struct.Server.html\" title=\"struct vessels::core::hal::network::Server\">Server</a>",synthetic:true,types:["vessels::core::hal::network::Server"]},{text:"impl Freeze for <a class=\"enum\" href=\"vessels/core/hal/network/enum.ConnectError.html\" title=\"enum vessels::core::hal::network::ConnectError\">ConnectError</a>",synthetic:true,types:["vessels::core::hal::network::ConnectError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"vessels/core/orchestrator/struct.Module.html\" title=\"struct vessels::core::orchestrator::Module\">Module</a>&lt;T&gt;",synthetic:true,types:["vessels::core::orchestrator::Module"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/orchestrator/struct.CompileError.html\" title=\"struct vessels::core::orchestrator::CompileError\">CompileError</a>",synthetic:true,types:["vessels::core::orchestrator::CompileError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/orchestrator/struct.Orchestrator.html\" title=\"struct vessels::core::orchestrator::Orchestrator\">Orchestrator</a>",synthetic:true,types:["vessels::core::orchestrator::Orchestrator"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/core/orchestrator/struct.InstantiateError.html\" title=\"struct vessels::core::orchestrator::InstantiateError\">InstantiateError</a>",synthetic:true,types:["vessels::core::orchestrator::InstantiateError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"vessels/kind/struct.Serde.html\" title=\"struct vessels::kind::Serde\">Serde</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["vessels::kind::serde::Serde"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"vessels/kind/struct.Default.html\" title=\"struct vessels::kind::Default\">Default</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["vessels::kind::default::Default"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"vessels/kind/struct.Iterator.html\" title=\"struct vessels::kind::Iterator\">Iterator</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["vessels::kind::iterator::Iterator"]},{text:"impl&lt;T, E, U&gt; Freeze for <a class=\"struct\" href=\"vessels/kind/struct.SinkStream.html\" title=\"struct vessels::kind::SinkStream\">SinkStream</a>&lt;T, E, U&gt;",synthetic:true,types:["vessels::kind::sink_stream::SinkStream"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/kind/struct.TransportError.html\" title=\"struct vessels::kind::TransportError\">TransportError</a>",synthetic:true,types:["vessels::kind::TransportError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"vessels/kind/enum.WrappedError.html\" title=\"enum vessels::kind::WrappedError\">WrappedError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["vessels::kind::WrappedError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/kind/using/struct.Serde.html\" title=\"struct vessels::kind::using::Serde\">Serde</a>",synthetic:true,types:["vessels::kind::using::Serde"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/kind/using/struct.Iterator.html\" title=\"struct vessels::kind::using::Iterator\">Iterator</a>",synthetic:true,types:["vessels::kind::using::Iterator"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/kind/using/struct.Default.html\" title=\"struct vessels::kind::using::Default\">Default</a>",synthetic:true,types:["vessels::kind::using::Default"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/reflect/struct.MethodTypes.html\" title=\"struct vessels::reflect::MethodTypes\">MethodTypes</a>",synthetic:true,types:["vessels::reflect::MethodTypes"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/reflect/struct.OutOfRangeError.html\" title=\"struct vessels::reflect::OutOfRangeError\">OutOfRangeError</a>",synthetic:true,types:["vessels::reflect::OutOfRangeError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/reflect/struct.ArgumentCountError.html\" title=\"struct vessels::reflect::ArgumentCountError\">ArgumentCountError</a>",synthetic:true,types:["vessels::reflect::ArgumentCountError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/reflect/struct.NameError.html\" title=\"struct vessels::reflect::NameError\">NameError</a>",synthetic:true,types:["vessels::reflect::NameError"]},{text:"impl Freeze for <a class=\"struct\" href=\"vessels/reflect/struct.CastError.html\" title=\"struct vessels::reflect::CastError\">CastError</a>",synthetic:true,types:["vessels::reflect::CastError"]},{text:"impl Freeze for <a class=\"enum\" href=\"vessels/reflect/enum.CallError.html\" title=\"enum vessels::reflect::CallError\">CallError</a>",synthetic:true,types:["vessels::reflect::CallError"]},{text:"impl Freeze for <a class=\"enum\" href=\"vessels/reflect/enum.Receiver.html\" title=\"enum vessels::reflect::Receiver\">Receiver</a>",synthetic:true,types:["vessels::reflect::Receiver"]},{text:"impl Freeze for <a class=\"enum\" href=\"vessels/reflect/enum.SomeTrait.html\" title=\"enum vessels::reflect::SomeTrait\">SomeTrait</a>",synthetic:true,types:["vessels::reflect::SomeTrait"]},{text:"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"vessels/replicate/struct.Shared.html\" title=\"struct vessels::replicate::Shared\">Shared</a>&lt;T&gt;",synthetic:true,types:["vessels::replicate::Shared"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()